{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\search_tool\\\\src\\\\Components\\\\AddSynonym.js\";\nimport React from 'react';\nimport './stil.css';\nimport { Button, Form, Card } from \"react-bootstrap\";\nimport axios from 'axios';\n\nclass AddSynonym extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isFetching: true\n      });\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState({\n          isFetching: false\n        });\n      } else {\n        if (this.state.word !== null && this.state.synonym != null) {\n          let reqBody = {\n            word: this.word.current.value,\n            synonym: this.synonym.current.value\n          };\n          axios.post('http://localhost:5000/sinonimi', reqBody).then(() => {\n            this.setState({\n              isFetching: false,\n              opis: \"Synonym is successuly added!\"\n            });\n            this.word.current.value = null;\n            this.synonym.current.value = null;\n          }).catch(() => {\n            this.setState({\n              isFetching: false,\n              naslovGreska: \"Error!\"\n            });\n          });\n        }\n      }\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      word: '',\n      synonym: '',\n      isFetching: false,\n      opis: '',\n      mapa: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isFetching: true\n    });\n    axios.get(\"http://localhost:5000/sinonimi\").then(res => {\n      this.setState({\n        mapa: res.data,\n        isFetching: false\n      });\n    }).catch(() => {\n      this.setState({\n        isFetching: false,\n        opis: \"Not avaliable.\"\n      });\n    });\n  }\n\n  render() {\n    const {\n      word,\n      synonym\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '55rem'\n      },\n      id: \"prva\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"naslov\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \" Add your synonym \"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      id: \"forma\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \" Add a word\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text1\",\n      placeholder: \"Enter a word\",\n      id: \"bar\",\n      name: \"word\",\n      value: word,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \" Add a synonym\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text2\",\n      placeholder: \"Enter synonyms\",\n      id: \"bar\",\n      name: \"synonym\",\n      value: synonym,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-warning\",\n      id: \"save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default AddSynonym;","map":{"version":3,"sources":["C:/Users/User/search_tool/src/Components/AddSynonym.js"],"names":["React","Button","Form","Card","axios","AddSynonym","Component","constructor","props","handleSubmit","event","preventDefault","setState","isFetching","form","currentTarget","checkValidity","stopPropagation","state","word","synonym","reqBody","current","value","post","then","opis","catch","naslovGreska","handleInputChange","target","name","mapa","componentDidMount","get","res","data","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './stil.css';\r\nimport { Button, Form,  Card} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nclass AddSynonym extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      word: '',\r\n      synonym: '',\r\n      isFetching: false,\r\n      opis: '',\r\n      mapa: null\r\n    };\r\n  }\r\n \r\n handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            isFetching: true\r\n        });\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.setState({\r\n                isFetching: false\r\n            });\r\n        }\r\n        else {\r\n            if(this.state.word !== null && this.state.synonym != null) {\r\n                let reqBody = {\r\n                    word: this.word.current.value,\r\n                    synonym: this.synonym.current.value\r\n                };\r\n                    \r\n                axios.post('http://localhost:5000/sinonimi', reqBody)\r\n                .then(() => {\r\n                    this.setState({\r\n                        isFetching: false,\r\n                        opis: \"Synonym is successuly added!\",\r\n                      });\r\n                    this.word.current.value = null;\r\n                    this.synonym.current.value = null;\r\n                })\r\n                .catch(()=> {\r\n                    this.setState({\r\n                        isFetching: false,\r\n                        naslovGreska: \"Error!\"\r\n                    });\r\n                });\r\n            }    \r\n       }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isFetching: true\r\n        });\r\n        axios.get(\"http://localhost:5000/sinonimi\" ).then((res)=> {\r\n            this.setState({\r\n                mapa: res.data,\r\n                isFetching: false\r\n            });\r\n        })\r\n        .catch(()=> {\r\n            this.setState({\r\n                isFetching: false,\r\n                opis: \"Not avaliable.\"\r\n            });\r\n        });\r\n    }\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault()\r\n      this.setState({\r\n        [event.target.name] : event.target.value\r\n      });\r\n  };\r\n \r\n\r\n\r\n  render() {\r\n    const { word, synonym} = this.state\r\n    return (\r\n      <div className=\"main-div\">\r\n            <Card style={{ width: '55rem' }} id=\"prva\">\r\n              <Card.Body>\r\n                <Card.Title id=\"naslov\"> Add your synonym </Card.Title>\r\n                \r\n                  <Form onSubmit= {this.handleSubmit}  id=\"forma\" >\r\n                    <Form.Text> Add a word</Form.Text>\r\n                    <input type=\"text1\" placeholder=\"Enter a word\" id=\"bar\" name= \"word\" value={word} onChange= {this.handleInputChange}/>\r\n                    <Form.Text> Add a synonym</Form.Text>\r\n                    <input type=\"text2\" placeholder=\"Enter synonyms\" id=\"bar\" name= \"synonym\" value={synonym} onChange= {this.handleInputChange}/>\r\n                    <Button type=\"submit\" variant=\"outline-warning\" id=\"save\" >Save</Button>\r\n                  </Form>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddSynonym;"]},"metadata":{},"sourceType":"module"}